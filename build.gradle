plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://repo.codemc.org/repository/maven-public')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://repo.citizensnpcs.co/')
    }

    maven {
        url = uri('https://maven.enginehub.org/repo/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://nexus.iridiumdevelopment.net/repository/maven-releases/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.bstats:bstats-bukkit:2.2.1'
    implementation 'com.iridium:IridiumColorAPI:1.0.6'
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.10.10'
    compileOnly 'net.citizensnpcs:citizens-main:2.0.28-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.5'
}

group = 'dev.syrent'
version = '2.3.10'
description = 'Wanted'
java.sourceCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

compileJava {
    sourceCompatibility = '1.' + targetJavaVersion
    targetCompatibility = '1.' + targetJavaVersion
    options.encoding = "UTF-8"
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.' + targetJavaVersion
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.' + targetJavaVersion
}
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}